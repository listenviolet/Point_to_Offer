class Solution {
public:
    // f(n, m) = 0                      (n = 1)
    // f(n, m) = [f(n - 1, m) + m] % n  (n > 1)
    int LastRemaining_Solution(int n, int m)
    {
        if(n < 1) return -1;
        int last = 0;
        for(int i = 2; i <= n; ++i)
            last = (last + m) % i;
        return last;
    }
};

运行时间：4ms

占用内存：576k

// 其中,有个游戏是这样的:首先,让小朋友们围成一个大圈.
// 然后,他随机指定一个数m,让编号为0的小朋友开始报数。
// 每次喊到m-1的那个小朋友要出列唱首歌,然后可以在礼品箱中任意的挑选礼物,并且不再回到圈中,
// 从他的下一个小朋友开始,继续0...m-1报数....这样下去....直到剩下最后一个小朋友,
// 可以不用表演,并且拿到牛客名贵的“名侦探柯南”典藏版(名额有限哦!!^_^)。
// 请你试着想下,哪个小朋友会得到这份礼品呢？(注：小朋友的编号是从0到n-1)


// k + 1 			-> 0
// k + 2 			-> 1
// ...

// n - 1 			-> n - k - 2
// 0     			-> n - k - 1
// 1     			-> n - k
// ...
// k - 1 			-> n - 2

// f'(n - 1, m)    -> f(n - 1, m)

// p(x) = (x - k - 1) % n
// p-1(x) = (x + k + 1) % n
// k = (m - 1) % n

// f(n, m) = f'(n - 1, m) = p-1[f(n - 1, m)] 
// = (f(n - 1, m) + k + 1) % n 
// = (f(n - 1, m) + m) % n 

